/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package View;

import Model.VitalSign;
import Model.VitalSignRecord;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author hazel
 */
public class ManageVitals extends javax.swing.JPanel {

    /**
     * Creates new form ManageVitals
     */
    //Declaring variables
    private VitalSignRecord vsh;
    int maxBP, minBP;
    
    //Initializing variables on constructor call
    public ManageVitals(int maxBP, int minBP,VitalSignRecord vsh) {
        initComponents();
        this.vsh = vsh;
        this.maxBP = maxBP;
        this.minBP = minBP;
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblViewTitle = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblView = new javax.swing.JTable();
        lblTemperature = new javax.swing.JLabel();
        txtTemperature = new javax.swing.JTextField();
        lblBloodPressure = new javax.swing.JLabel();
        txtBloodPressure = new javax.swing.JTextField();
        lblPulse = new javax.swing.JLabel();
        txtPulse = new javax.swing.JTextField();
        lblDate = new javax.swing.JLabel();
        txtDate = new javax.swing.JTextField();
        btnDetais = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnConfirm = new javax.swing.JButton();

        setBackground(new java.awt.Color(0, 153, 153));
        setPreferredSize(new java.awt.Dimension(828, 657));

        lblViewTitle.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblViewTitle.setText("Vital Signs");

        tblView.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date", "Blood Pressure"
            }
        ));
        jScrollPane1.setViewportView(tblView);

        lblTemperature.setText("Temperature:");

        txtTemperature.setEnabled(false);

        lblBloodPressure.setText("Blood Pressure:");

        txtBloodPressure.setEnabled(false);

        lblPulse.setText("Pulse");

        txtPulse.setEnabled(false);

        lblDate.setText("Date:");

        txtDate.setEnabled(false);

        btnDetais.setText("View Details");
        btnDetais.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDetaisActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnConfirm.setText("Confirm");
        btnConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(128, 128, 128)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTemperature)
                            .addComponent(lblBloodPressure)
                            .addComponent(lblPulse)
                            .addComponent(lblDate))
                        .addGap(79, 79, 79)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtPulse, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtBloodPressure, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTemperature, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(98, 98, 98)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(198, 198, 198)
                        .addComponent(btnConfirm, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 118, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnDetais, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(86, 86, 86))
            .addGroup(layout.createSequentialGroup()
                .addGap(305, 305, 305)
                .addComponent(lblViewTitle)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(lblViewTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(52, 52, 52)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblTemperature)
                            .addComponent(txtTemperature, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblBloodPressure)
                            .addComponent(txtBloodPressure, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPulse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblPulse)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(137, 137, 137)
                        .addComponent(btnDetais)
                        .addGap(18, 18, 18)
                        .addComponent(btnUpdate)
                        .addGap(18, 18, 18)
                        .addComponent(btnDelete)))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDate))
                .addGap(32, 32, 32)
                .addComponent(btnConfirm)
                .addContainerGap(64, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    //Method to populate table
    //Populate the Abnormal values on the datatable
    public void populateTable(){
        DefaultTableModel dtm = (DefaultTableModel)tblView.getModel();
        dtm.setRowCount(0);
        
        for(VitalSign vs : vsh.getvitalSignRecord()){
           if(vs.getBloodPressure() > maxBP || vs.getBloodPressure() < minBP){
                Object row[] = new Object[2];
                row[0] = vs;
                row[1] = vs.getBloodPressure();
                dtm.addRow(row);
            }
        }
    
    }
    
    //Functionality to be performed on Details button click
    //To display details of the selected element
    private void btnDetaisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDetaisActionPerformed
        // TODO add your handling code here:

        int selectedRowIndex = tblView.getSelectedRow();

        if(selectedRowIndex >= 0){

            VitalSign v =(VitalSign)tblView.getValueAt(selectedRowIndex, 0);
            txtBloodPressure.setText(String.valueOf(v.getBloodPressure()));
            txtDate.setText(String.valueOf(v.getDate()));
            txtPulse.setText(String.valueOf(v.getPulse()));
            txtTemperature.setText(String.valueOf(v.getTemperature()));
        }
        else{
            JOptionPane.showMessageDialog(null, "Please select a row");
        }
    }//GEN-LAST:event_btnDetaisActionPerformed

    //Functionality to be performed on Delete Button click
    //To delete the selected element
    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblView.getSelectedRow();

        if(selectedRowIndex >= 0){
            VitalSign v = (VitalSign) tblView.getValueAt(selectedRowIndex, 0);
            vsh.deleteVitals(v);
            JOptionPane.showMessageDialog(null, "Row has been deleted");
            populateTable();
        }

        else{
            JOptionPane.showMessageDialog(null, "Please select a row");
        }

    }//GEN-LAST:event_btnDeleteActionPerformed

    //Functionality to be performed on Update button click
    //To update the selected element
    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:

        int selectedRowIndex = tblView.getSelectedRow();

        if(selectedRowIndex >= 0){
            txtBloodPressure.setEnabled(true);
            txtDate.setEnabled(true);
            txtPulse.setEnabled(true);
            txtTemperature.setEnabled(true);
        }
        else{
            JOptionPane.showMessageDialog(null, "Please select a row");
        }

    }//GEN-LAST:event_btnUpdateActionPerformed

    //Functionality to be performed on Confirm button click
    //Once the data is updated. Store the updated values in the VitalSigns
    private void btnConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblView.getSelectedRow();
        double bloodPressure = Double.parseDouble(txtBloodPressure.getText());
        int pulse = Integer.parseInt(txtPulse.getText());
        double temperature = Double.parseDouble(txtTemperature.getText());
        String date = txtDate.getText();
        VitalSign vs = new VitalSign();
        vs.setBloodPressure(bloodPressure);
        vs.setDate(date);
        vs.setPulse(pulse);
        vs.setTemperature(temperature);
        vsh.setVitals(selectedRowIndex, vs);
        JOptionPane.showMessageDialog(null, "Vital Signs Updated Successfully");
        populateTable();

        txtBloodPressure.setEnabled(false);
        txtDate.setEnabled(false);
        txtPulse.setEnabled(false);
        txtTemperature.setEnabled(false);
    }//GEN-LAST:event_btnConfirmActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConfirm;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnDetais;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblBloodPressure;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblPulse;
    private javax.swing.JLabel lblTemperature;
    private javax.swing.JLabel lblViewTitle;
    private javax.swing.JTable tblView;
    private javax.swing.JTextField txtBloodPressure;
    private javax.swing.JTextField txtDate;
    private javax.swing.JTextField txtPulse;
    private javax.swing.JTextField txtTemperature;
    // End of variables declaration//GEN-END:variables
}
